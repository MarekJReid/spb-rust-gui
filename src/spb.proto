
// * Copyright (c) 2015-2021 Cirrus Link Solutions and others
// *
// * This program and the accompanying materials are made available under the
// * terms of the Eclipse Public License 2.0 which is available at
// * http://www.eclipse.org/legal/epl-2.0.
// *
// * SPDX-License-Identifier: EPL-2.0
// *
// * Contributors:
// *   Cirrus Link Solutions - initial implementation

//
// To compile:
// protoc --go_out=. --go_opt=paths=source_relative sparkplug/proto/*.proto
//

syntax = "proto3";

package org.eclipse.tahu.protobuf;



enum DataType {
    // Indexes of Data Types

    // Unknown placeholder for future expansion.
    Unknown         = 0;

    // Basic Types
    Int8            = 1;
    Int16           = 2;
    Int32           = 3;
    Int64           = 4;
    UInt8           = 5;
    UInt16          = 6;
    UInt32          = 7;
    UInt64          = 8;
    Float           = 9;
    Double          = 10;
    Boolean         = 11;
    String          = 12;
    DateTime        = 13;
    Text            = 14;

    // Additional Metric Types
    UUID            = 15;
    DataSet         = 16;
    Bytes           = 17;
    File            = 18;
    Template        = 19;

    // Additional PropertyValue Types
    PropertySet     = 20;
    PropertySetList = 21;

    // Array Types
    Int8Array = 22;
    Int16Array = 23;
    Int32Array = 24;
    Int64Array = 25;
    UInt8Array = 26;
    UInt16Array = 27;
    UInt32Array = 28;
    UInt64Array = 29;
    FloatArray = 30;
    DoubleArray = 31;
    BooleanArray = 32;
    StringArray = 33;
    DateTimeArray = 34;
}

message Payload {
    uint64 timestamp = 1;
    repeated Metric metrics = 2;
    uint64 seq = 3;
    string uuid = 4;
    bytes body = 5;

    message Template {
        string version = 1;
        repeated Metric metrics = 2;
        repeated Parameter parameters = 3;
        string template_ref = 4;
        bool is_definition = 5;

        message Parameter {
            string name = 1;
            uint32 type = 2;

            oneof value {
                uint32 int_value = 3;
                uint64 long_value = 4;
                float float_value = 5;
                double double_value = 6;
                bool boolean_value = 7;
                string string_value = 8;
            }
        }
    }

    message DataSet {
        message DataSetValue {
            oneof value {
                uint32 int_value = 1;
                uint64 long_value = 2;
                float float_value = 3;
                double double_value = 4;
                bool boolean_value = 5;
                string string_value = 6;
            }
        }

        message Row {
            repeated DataSetValue elements = 1;
        }

        uint64 num_of_columns = 1;
        repeated string columns = 2;
        repeated uint32 types = 3;
        repeated Row rows = 4;
    }

    message PropertyValue {
        uint32 type = 1;
        bool is_null = 2;

        oneof value {
            uint32 int_value = 3;
            uint64 long_value = 4;
            float float_value = 5;
            double double_value = 6;
            bool boolean_value = 7;
            string string_value = 8;
            PropertySet propertyset_value = 9;
            PropertySetList propertysets_value = 10;
        }
    }

    message PropertySet {
        repeated string keys = 1;
        repeated PropertyValue values = 2;
    }

    message PropertySetList {
        repeated PropertySet propertyset = 1;
    }

    message MetaData {
        bool is_multi_part = 1;
        string content_type = 2;
        uint64 size = 3;
        uint64 seq = 4;
        string file_name = 5;
        string file_type = 6;
        string md5 = 7;
        string description = 8;
    }

    message Metric {
        string name = 1;
        uint64 alias = 2;
        uint64 timestamp = 3;
        uint32 datatype = 4;
        bool is_historical = 5;
        bool is_transient = 6;
        bool is_null = 7;
        MetaData metadata = 8;
        PropertySet properties = 9;

        oneof value {
            uint32 int_value = 10;
            uint64 long_value = 11;
            float float_value = 12;
            double double_value = 13;
            bool boolean_value = 14;
            string string_value = 15;
            bytes bytes_value = 16;
            DataSet dataset_value = 17;
            Template template_value = 18;
        }
    }
}
